================================================Details of ToDoList Management Project===========================================

*********** Project Description *************

This ToDoList Management WebApp uses Angular 1,Angular Material, CSS3,Angular UI-Router.
 Front End consists of 2 Screens, 
	1.Home screen displays all the tasks of the specified Due Date.
	  1.a.Change date by clicking on date picker and observe ,list of tasks changes
	2.On clicking Add Tasks button,Add screen opens with respective date selected.
	  2.a. Select due date on which task is to be added.
	  2.b. Enter task name and click Add task button.
          2.c. On successfull addition of task name into MongoDB,it will redirect to Home screen with respective date.

Note: Minimum requirement on Front End and backend is satisfied,more could have done but due to time restriction limiting to minimum feature.




************************ BAckend Url ****************
1.It is assumed that backend will run at "http://localhost:3000",hence same have been hardcoded in file '/app/js/services/dataServices.js'.
2.Suppose you backendProject is deployed at different URL(including different port) then make sure "baseUrl" String Object is changed at location mentioned in comment 1.





***************Steps to Deploy ********************************
Note:Makesure my backendProject  is deployed locally before proceeding here.
Note: This Project can be deployed in two ways: 
	1. Using Node.
	2.Using Tomcat.

 Steps on how to deploy using each way is given below.



*************** 1.  Steps to deploy using Node ******************
Note: MAke sure backend url is configured appropriately as stated in above section.
Note: I assume that Node and NPM are installed on your machine,If not then install both and then follow below steps.

1.Extract "ToDoListAppFrontEnd.zip",Go to directory "ToDoListAppFrontEnd".
2.Inside the directory,following files and folder should be visible.
   2.a.app folder
   2.b.gulpfile.js
   2.c.package.json.
   2.d.screenshots folder
3.If you are not at this hiererchy then make sure you are pointing at this level.
4.Open the command window at this level.
5.In command window run the following command "npm start".
6.It will download all dependencies and automatically open the Chrome Browser pointing to webapp.

Note: It is assumed that port "8081" is free while running this demo.If not then configure port available in "gulpfile.js"
	by replacing "8081" by the port number which is free.Final String will look like. e.g. var port="8083"; or var port="8082"; .

Note  :It is assumed that chrome browser is installed on machine,if not then install and follow above procedure. 

Note:If above procedure fails due to restricted access to download via NPM then follow Tomcat method to deploy the project.

**************** 2. Steps to Deploy this project using Tomcat *********

1.Extract "ToDoListAppFrontEnd.zip",A directory with name "ToDoListAppFrontEnd" would be created with all data.
2. Configure Tomcat on your local machine to run on <port>
3. paste the complete folder "ToDoListAppFrontEnd" in "webapps" directory of tomcat folder.
4. After copying the folder to "webapps" directory of tomcat folder, test the project visually.
5. Hit the url "http://localhost:<port>/ToDoListAppFrontEnd/app/index.html".
		Example:
		"http://localost:8080/ToDoListAppFrontEnd/app/index.html"


Note: Check the above url correctly as index.html is inside "app" folder and not directly at the root level.








************* Known Issues ********************************

1.Given the Wireframe reference,best have been tried to fullfill minimum requirement to the best of understanding.
2.Rather concentrating more on feature due to time restriction,UI has been somewhat improved in terms of look.
3.Identation may not be proper due to IDE mismatch.Request to ignore at few, though atmost care is taken.









**********************************UI portfolio link****************************************

More UI and backend portfolio can be found at:
https://gauravsetaportfolio.herokuapp.com















